{% style %}
  #shopify-section-{{section.id}} {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
      background-color: {{section.settings.bg_color}};
  }

  @media screen and (max-width:768px){
    #shopify-section-{{section.id}} {
      padding-top: {{ section.settings.padding_top_m }}px;
      padding-bottom: {{ section.settings.padding_bottom_m }}px;
    }
  }
{% endstyle %}

<div class="mian-wrapper-frequently_boughts page-width">
  {% if section.settings.top_heading != blank %}
    <h2 class="top-heading">
      {{ section.settings.top_heading }}
    </h2>
  {% endif %}

  <div class="main-frequently_boughts">
    <div class="main-products-wrapper">
      <div class="main-product" data-product-variant-id="{{ product.variants.first.id }}">
        <div class="product-img">
          <img src="{{ product.featured_image | product_img_url: 'master' }}">
        </div>
        <div class="product-info">
          <p class="tag">This Product</p>
          <h3 class="title">{{ product.title }}</h3>
          <p class="price">{{ product.price | money }}</p>
        </div>
        <div class="variant-selector">
          <select class="variant-dropdown">
            {% for variant in product.variants %}
              <option
                value="{{ variant.id }}"
                {% if variant == product.variants.first %}
                  selected
                {% endif %}
              >
                {{ variant.title }} - {{ variant.price | money }}
              </option>
            {% endfor %}
          </select>
        </div>
      </div>

      {% for suggested_product in section.settings.product_list %}
        <div class="suggested-product" data-product-variant-id="{{ suggested_product.variants.first.id }}">
          <div class="devider">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="2"
              stroke="currentColor"
              class="w-[20px] h-[20px]"
              height="20"
              width="20"
              aria-hidden="true"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"></path>
            </svg>
          </div>
          <div class="suggested-product_image">
            <a href="{{ suggested_product.url }}">
              <img src="{{ suggested_product.featured_image | product_img_url:'master' }}">
            </a>
          </div>
          <div class="suggested-product-info">
            <p class="tag">Suggested Product</p>
            <h3 class="title">
              <a href="{{ suggested_product.url }}">{{ suggested_product.title }}</a>
            </h3>
            <p class="price">{{ suggested_product.price | money }}</p>
          </div>
          {% if suggested_product.variants.size > 1 %}
            <div class="variant-selector">
              <select class="variant-dropdown">
                {% for variant in suggested_product.variants %}
                  <option
                    value="{{ variant.id }}"
                    {% if variant == suggested_product.variants.first %}
                      selected
                    {% endif %}
                  >
                    {{ variant.title }} - {{ variant.price | money }}
                  </option>
                {% endfor %}
              </select>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>

    <div class="frequently_boughts-info">
      <div class="info-wrapper">
        <p class="price">
          <span>Total Price:</span> <span id="total-price">{{ product.price | money }}</span>
        </p>
        <button class="add-to-cart-F-B btn" type="submit">Add to cart</button>
      </div>
    </div>
  </div>
</div>

<script>
  //For Frequently Bought Products section

  let productVariantIds = [];
  let totalPrice = 0;

  // Handle main product
  const mainProductEl = document.querySelector('.main-product');
  const mainProductVariantId = mainProductEl.querySelector('.variant-dropdown').value;
  const mainProductPrice = parseFloat(mainProductEl.querySelector('.product-info .price').textContent.replace('$', '').trim());
  productVariantIds.push(mainProductVariantId);
  totalPrice += mainProductPrice;

  // Handle suggested products
  document.querySelectorAll('.suggested-product').forEach(productEl => {
    const suggestedProductVariantId = productEl.querySelector('.variant-dropdown').value;
    const suggestedProductPrice = parseFloat(productEl.querySelector('.suggested-product-info .price').textContent.replace('$', '').trim());
    totalPrice += suggestedProductPrice;
    productVariantIds.push(suggestedProductVariantId);
  });

  // Update total price display
  document.getElementById('total-price').textContent = '$' + totalPrice.toFixed(2);

  // Update variant IDs on selection change
  document.querySelectorAll('.variant-dropdown').forEach(dropdown => {
    dropdown.addEventListener('change', () => {
      productVariantIds = [];
      totalPrice = 0;

      // Recalculate for the main product
      const mainProductVariantId = mainProductEl.querySelector('.variant-dropdown').value;
      const mainProductPrice = parseFloat(mainProductEl.querySelector('.product-info .price').textContent.replace('$', '').trim());
      productVariantIds.push(mainProductVariantId);
      totalPrice += mainProductPrice;

      // Recalculate for suggested products
      document.querySelectorAll('.suggested-product').forEach(productEl => {
        const suggestedProductVariantId = productEl.querySelector('.variant-dropdown').value;
        const suggestedProductPrice = parseFloat(productEl.querySelector('.suggested-product-info .price').textContent.replace('$', '').trim());
        totalPrice += suggestedProductPrice;
        productVariantIds.push(suggestedProductVariantId);
      });

      // Update total price display
      document.getElementById('total-price').textContent = '$' + totalPrice.toFixed(2);
    });
  });

  // Add to cart functionality
  async function addProductsToCart(productVariantIds) {
    for (const variantId of productVariantIds) {
      await fetch('/cart/add.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id: variantId, quantity: 1 })
      });
    }
  }

  document.querySelector('.add-to-cart-F-B').addEventListener('click', async () => {
    await addProductsToCart(productVariantIds);
    theme.cart.getCartProductMarkup().then(cartMarkup => {
      const cartForm = new theme.CartForm(document.getElementById('CartDrawerForm'));
      cartForm.cartMarkup(cartMarkup);
    });
    document.dispatchEvent(new CustomEvent('cart:open'));
  });
</script>

{% schema %}
{
  "name": "Frequently Boughts",
  "class": "frequently-boughts-section",
  "settings": [
    {
      "type": "text",
      "id": "top_heading",
      "label": "Heading"
    },
    {
      "type": "product_list",
      "id": "product_list",
      "label": "Suggested Product",
      "limit": 10
    },
    {
      "type": "header",
      "content": "Spacing Desktop"
    },
    {
      "type": "number",
      "id": "padding_top",
      "label": "Top spacing",
      "default": 0
    },
    {
      "type": "number",
      "id": "padding_bottom",
      "label": "Bottom spacing",
      "default": 0
    },
    {
      "type": "header",
      "content": "Spacing Mobile"
    },
    {
      "type": "number",
      "id": "padding_top_m",
      "label": "Top spacing",
      "default": 0
    },
    {
      "type": "number",
      "id": "padding_bottom_m",
      "label": "Bottom spacing",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Frequently Boughts"
    }
  ]
}
{% endschema %}
