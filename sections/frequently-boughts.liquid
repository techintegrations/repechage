<div class="mian-F-B-wrapper page-width">
  <div class="main-F-B-heading">{{ section.settings['main-F-B-headings'] }}</div>
  <div class="main-F-B">
    <div class="products-wrapper-F-B">
      <div class="main-product" data-product-variant-id="{{ product.variants.first.id }}">
        <div class="product-img-F-B">
          <img src="{{ product.featured_image | product_img_url: 'master' }}">
        </div>
        <div class="main-product-info">
          <p class="Product-tag">This Product</p>
          <h3 class="product-heading">{{ product.title }}</h3>
          <p class="main-product-price">{{ product.price | money }}</p>
        </div>
      </div>

      {% for suggested_product in section.settings['suggested-product'] %}
        {% if suggested_product != blank %}
          <div class="devider-F-b" >
            <div
              class="rounded-full "
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="2"
                stroke="currentColor"
                class="w-[20px] h-[20px]"
                height="20"
                width="20"
                aria-hidden="true"
              >
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"></path>
              </svg>
            </div>
          </div>
          <div class="suggested-product" data-product-variant-id="{{ suggested_product.variants.first.id }}">
            <div class="product-img-F-B">
              <img src="{{ suggested_product.featured_image | product_img_url:'master' }}">
            </div>
            <div class="suggested-product-info">
              <p class="Product-tag">Suggested Product</p>
              <h3 class="product-heading">{{ suggested_product.title }}</h3>
              <p class="suggested-product-price">{{ suggested_product.price | money }}</p>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    <div class="F-B-info">
      <div class="F-B-info-wrapper">
        <p>
          <span>Total Price:</span> <span id="total-price">{{ product.price | money }}</span>
        </p>
        <button class ="add-to-cart-F-B" type="submit" >Add to cart</button>
      </div>
    </div>
  </div>
</div>

<script>
    const mainProductVariantId = document.querySelector('.main-product').getAttribute('data-product-variant-id');
    let productVariantIds = [mainProductVariantId]; // Array to store the variant IDs

    // Calculate total price including suggested products
    let totalPrice = parseFloat(document.querySelector('.main-product-price').textContent.replace('$', '').trim());

    document.querySelectorAll('.suggested-product').forEach(function(productEl) {
        const suggestedProductPrice = parseFloat(productEl.querySelector('.suggested-product-price').textContent.replace('$', '').trim());
        const suggestedProductVariantId = productEl.getAttribute('data-product-variant-id');

        totalPrice += suggestedProductPrice; // Add suggested product prices to total
        productVariantIds.push(suggestedProductVariantId); // Add variant ID to the array
    });

    // Update total price in the DOM
    document.getElementById('total-price').textContent = '$' + totalPrice.toFixed(2);

    // Function to add products to the cart one by one
    async function addProductsToCart(productVariantIds) {
        for (const variantId of productVariantIds) {
                let response = await fetch('/cart/add.js', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        id: variantId, // Use variant ID here
                        quantity: 1
                    })
                });
                let data = await response.json();
        }
    }
// Add to Cart button click event
document.querySelector('.add-to-cart-F-B').addEventListener('click', function() {
  const addToCartButton = this;
  addToCartButton.disabled = true;
  addToCartButton.textContent = 'Adding to cart...';

  addProductsToCart(productVariantIds)
    .then(() => {
      fetch('/cart.js')
        .then((response) => response.json())
        .then((data) => {
          document.querySelector('.cart__items').innerHTML = data.items.map((item) => {
            return `
              <div class="cart__item">
                <div class="cart__image">
                  <img src="${item.image}" alt="${item.title}">
                </div>
                <div class="cart__info">
                  <h3 class="cart__title">${item.title}</h3>
                  <p class="cart__price">${item.price}</p>
                  <p class="cart__quantity">Quantity: ${item.quantity}</p>
                </div>
              </div>
            `;
          }).join('');
          document.dispatchEvent(new CustomEvent('cart:open'));
          addToCartButton.disabled = false;
          addToCartButton.textContent = 'Add to cart';
          alert('Products added to cart successfully!');
        })
        .catch((error) => {
          console.error(error);
          addToCartButton.disabled = false;
          addToCartButton.textContent = 'Add to cart';
          alert('Error adding products to cart. Please try again.');
        });
    })
    .catch((error) => {
      console.error(error);
      addToCartButton.disabled = false;
      addToCartButton.textContent = 'Add to cart';
      alert('Error adding products to cart. Please try again.');
    });
});
</script>
{% schema %}
{
  "name": "frequently-boughts",
  "settings": [
    {
      "type": "richtext",
      "id": "main-F-B-headings",
      "label": "Heading"
    },
    {
      "type": "product_list",
      "id": "suggested-product",
      "label": "Suggested Product",
      "limit": 10
    }
  ],
  "presets": [
    {
      "name": "Frequently Boughts"
    }
  ]
}
{% endschema %}
