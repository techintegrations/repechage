<div class="mian-F-B-wrapper page-width">
  <div class="main-F-B-heading">{{ section.settings['main-F-B-headings'] }}</div>
  <div class="main-F-B">
    <div class="products-wrapper-F-B">
      <div class="main-product" data-product-variant-id="{{ product.variants.first.id }}">
        <div class="product-img-F-B">
          <img src="{{ product.featured_image | product_img_url: 'master' }}">
        </div>
        <div class="main-product-info">
          <p class="Product-tag">This Product</p>
          <h3 class="product-heading">{{ product.title }}</h3>
          <p class="main-product-price">{{ product.price | money }}</p>
        </div>
      </div>

      {% for suggested_product in section.settings['suggested-product'] %}
        {% if suggested_product != blank %}
          <div class="devider-F-b">
            <div
              class="rounded-full "
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="2"
                stroke="currentColor"
                class="w-[20px] h-[20px]"
                height="20"
                width="20"
                aria-hidden="true"
              >
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"></path>
              </svg>
            </div>
          </div>
          <div class="suggested-product" data-product-variant-id="{{ suggested_product.variants.first.id }}">
            <div class="product-img-F-B">
              <img src="{{ suggested_product.featured_image | product_img_url:'master' }}">
            </div>
            <div class="suggested-product-info">
              <p class="Product-tag">Suggested Product</p>
              <h3 class="product-heading">{{ suggested_product.title }}</h3>
              <p class="suggested-product-price">{{ suggested_product.price | money }}</p>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    <div class="F-B-info">
      <div class="F-B-info-wrapper">
        <p>
          <span>Total Price:</span> <span id="total-price">{{ product.price | money }}</span>
        </p>
        <button class ="add-to-cart-F-B" type="submit" >Add to cart</button> 
      </div>
    </div>
  </div>
</div>

<script>
  const mainProductVariantId = document.querySelector('.main-product').getAttribute('data-product-variant-id');
  let productVariantIds = [mainProductVariantId];
  let totalPrice = parseFloat(document.querySelector('.main-product-price').textContent.replace('$', '').trim());

  document.querySelectorAll('.suggested-product').forEach(productEl => {
    const suggestedProductPrice = parseFloat(productEl.querySelector('.suggested-product-price').textContent.replace('$', '').trim());
    const suggestedProductVariantId = productEl.getAttribute('data-product-variant-id');
    totalPrice += suggestedProductPrice;
    productVariantIds.push(suggestedProductVariantId);
  });

  document.getElementById('total-price').textContent = '$' + totalPrice.toFixed(2);

  // Define addProductsToCart function here
  async function addProductsToCart(productVariantIds) {
    for (const variantId of productVariantIds) {
      await fetch('/cart/add.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id: variantId, quantity: 1 })
      });
    }
  }

  // Fetch cart function
  async function fetchCart() {
    const response = await fetch('/cart.js');
    if (!response.ok) {
      throw new Error('Failed to fetch cart');
    }
    return await response.json();
  }

  // Update cart display function
  function updateCartDisplay(cart) {
    const cartItemsContainer = document.querySelector('.cart-items-container'); // Update with your cart item container selector
    cartItemsContainer.innerHTML = ''; // Clear current items

    cart.items.forEach(item => {
      const cartItemElement = document.createElement('div');
      cartItemElement.classList.add('cart-item');
      cartItemElement.innerHTML = `
        <img src="${item.image}" alt="${item.product_title}" />
        <div class="cart-item-info">
          <h4>${item.product_title}</h4>
          <p>Variant: ${item.variant_title}</p>
          <p>Quantity: ${item.quantity}</p>
          <p>Price: ${(item.price / 100).toFixed(2)} $</p>
        </div>
      `;
      cartItemsContainer.appendChild(cartItemElement);
    });

    // Optionally update total price and other cart stats
  }

  // Event listener for the "Add to cart" button
  document.querySelector('.add-to-cart-F-B').addEventListener('click', async () => {
    await addProductsToCart(productVariantIds); // Ensure this function is defined
    const cart = await fetchCart(); // Fetch updated cart contents
    updateCartDisplay(cart); // Update cart display with new items
    document.dispatchEvent(new CustomEvent('cart:open')); // Open the cart drawer
  });
</script>


{% schema %}
{
  "name": "frequently-boughts",
  "settings": [
    {
      "type": "richtext",
      "id": "main-F-B-headings",
      "label": "Heading"
    },
    {
      "type": "product_list",
      "id": "suggested-product",
      "label": "Suggested Product",
      "limit": 10
    }
  ],
  "presets": [
    {
      "name": "Frequently Boughts"
    }
  ]
}
{% endschema %}
