<div class="sample-product-wrapper custom-dots-style" data-max-products="{{ settings.max_products }}" data-threshold="{{ settings.amount | times: 100 }}">
  {% if settings.heading != blank or settings.text != blank %}
    <div class="top-heading">
      {% if settings.heading != blank %}
        <h2>{{ settings.heading }}</h2>
      {% endif %}
      {% if settings.text != blank %}
        <h4>{{ settings.text }}</h4>
      {% endif %}
    </div>
  {% endif %}


  <div class="sample-product-row simple-product">
    {% for Sproduct in settings.sample_products %}
      <div class="sample-product">
        <div class="f-image">
          <img src="{{ Sproduct.featured_image | img_url:'300x' }}">
        </div>
        <div class="grid-product__info">
          <div class="grid-product__title grid-product__title--body">{{ Sproduct.title }}</div>
          {% assign current_variant = Sproduct.selected_or_first_available_variant %}
          <button type="button" {% unless current_variant.available %}disabled="disabled"{% endunless %} class="btn btn--full add-to-cart-btn" data-variant-id="{{ current_variant.id }}">
            {% if current_variant.available %}
                {{ 'products.product.add_to_cart' | t }}
            {% else %}
                {{ 'products.product.sold_out' | t }}
            {% endif %}
        </button>

        </div>
      </div>
    {% endfor %}
  </div>

  {% assign maxProducts = settings.max_products %}
  <p class="max-samples-message" style="display:none;">{{ settings.max_product_message | replace: '[number]', maxProducts }}</p>
  <div class="sample-checkout-wrap">
    <button type="button" class="btn btn--full popup-checkout-btn">Checkout</button>
    <button data-fancybox-close class="sample-popup-close">No Thanks</button>
  </div>
</div>

<script>
  var selectedProducts = [];
  var simpleSlider; // Define the Flickity variables for both sliders

  function updateSampleProductDisplay(cartTotal) {
    const simpleProductRow = document.querySelector('.simple-product');

    if (simpleSlider) {
      setTimeout(function() {
        simpleSlider.resize();
      }, 500);
    }
  }

  function fetchCartData() {
    return fetch('/cart.js')
      .then(response => response.json())
      .then(data => ({
        total_price: data.total_price, 
        item_count: data.item_count 
      }))
      .catch(error => {
        console.error('Error fetching cart data:', error);
        return { total_price: 0, item_count: 0 };
      });
  }

  function initializeSampleProductDisplay() {
    fetchCartData().then(cartData => {
      updateSampleProductDisplay(cartData.total_price);
      sessionStorage.setItem('cartTotal', cartData.total_price.toString());
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    initializeSampleProductDisplay();

    simpleSlider = new Flickity('.simple-product', {
      cellAlign: 'left',
      contain: true,
      prevNextButtons: true,
      pageDots: true,
      freeScroll: false,
      avoidReflow: true,
      wrapAround: true,
    });

    // Attach click event handler to button
    document.querySelector('.sample-product-btn').addEventListener('click', function() {
      // Use setTimeout to delay the resize by 2 seconds (2000 milliseconds)
      setTimeout(function() {
        if (simpleSlider) simpleSlider.resize(); // Resize simple Flickity slider
      }, 500);
    });

  });
jQuery(document).ready(function($) {
    // Maximum allowed sample products
    var maxAllowedSamples = 3;
    var selectedProducts = [];

    // Function to update the UI based on the selected products
    function updateUI() {
        if (selectedProducts.length >= maxAllowedSamples) {
            $('.add-to-cart-btn:not(.remove-btn)').attr('disabled', true); // Disable all add-to-cart buttons
        } else {
            $('.add-to-cart-btn').removeAttr('disabled'); // Enable all add-to-cart buttons
        }

        if (selectedProducts.length > 0) {
            $('.popup-checkout-btn').removeAttr('disabled'); // Enable checkout button
        } else {
            $('.popup-checkout-btn').attr('disabled', true); // Disable checkout button
        }
    }

    // Function to handle add/remove button click
    function toggleProductSelection(button, variantId) {
        if ($(button).hasClass('remove-btn')) {
            // Remove product from selected list
            selectedProducts = selectedProducts.filter(id => id !== variantId);
            $(button).removeClass('remove-btn').text('{{ "products.product.add_to_cart" | t }}');
        } else {
            // Add product to selected list
            selectedProducts.push(variantId);
            $(button).addClass('remove-btn').text('{{ "products.product.remove_from_cart" | t }}');
        }
        updateUI();
    }

    // Attach event listener to all buttons with the class 'add-to-cart-btn'
    $('.add-to-cart-btn').on('click', function() {
        var variantId = $(this).data('variant-id');
        toggleProductSelection(this, variantId);
    });

    // Handle the checkout button click
    $('.popup-checkout-btn').on('click', function() {
        if (selectedProducts.length > 0) {
            var ajaxCalls = selectedProducts.map(function(variantId) {
                return $.ajax({
                    type: "POST",
                    url: "/cart/add.js",
                    data: { quantity: 1, id: variantId },
                    dataType: "json"
                });
            });

            // Execute all AJAX calls and then open the cart drawer
            $.when.apply($, ajaxCalls).then(function() {
                var cart = new theme.CartDrawer();
                cart.init();
                cart.open();
                // Close the popup
                $.fancybox.close();
            });
        }
    });

    // Initial UI setup
    updateUI();
});

</script>



<style>
  .remove-btn {
      background-color: #b30000;
  }
  
  .remove-btn:hover, .remove-btn:focus {
      background-color: #ff0000;
  }
  p.max-samples-message {
    text-align: center;
    margin: 15px 0;
    color: #b30000;
  }
  
  .sample-product-row {
      min-height: 420px;
      padding-bottom: 15px;
  }
  
  .sample-product-row ol.flickity-page-dots {
      position: relative;
      bottom: 0;
  }
  .sample-checkout-wrap {
    max-width: 280px;
    margin: 0 auto;
    text-align: center;
  }
  
  .sample-checkout-wrap .sample-popup-close {
      display: inline-block;
      padding-top: 10px;
      text-decoration: underline;
      text-underline-offset: 5px;
      color: #737373;
  }
  
  .sample-checkout-wrap .sample-popup-close:hover {
      color: #000;
  }
  button.sample-product-btn {
        margin: 0 0 10px 0;
    display: inline-block;
    animation: flash 2.5s infinite;
    color: #b30000;
    text-transform: uppercase;
    font-weight: 700;
    text-decoration: underline;
    text-underline-offset: 5px;
    font-size: 14px;
  }
  
  .cart__checkout-wrapper {
      text-align: center;
      margin-top: 10px;
  }
  @keyframes flash {
      0% {
          opacity: 1;
      }
      50% {
          opacity: 0.5;
      }
      100% {
          opacity: 1;
      }
  }
</style>
